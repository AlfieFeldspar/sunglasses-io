swagger: '2.0'
info:
  title: 'Sunglasses API'
  description: 'See your app clearly with the Sunglasses API'
  version: '1.0.0'
# the domain of the service
host: 'api.sunglasses.io'
schemes:
  - 'https'
# will prefix all paths
basePath: '/api'
produces:
  - 'application/json'
  
  
paths:
  /brands:
    get:
      tags:
        - 'Brands'
      summary: 'Brands of Sunglasses'
      description: |
        The Brands endpoint returns information about brands of sunglasses sold by Sunglasses-io. The response includes the brand name and its associated id.
      parameters:
        - name: 'brand'
          in: 'query'
          description: 'A brand of sunglasses.'
          required: true
          type: 'string'
      responses:
        '200':
          description: 'Successful operation. The queried brand is returned as an object with an id.'
          schema:
            type: 'object'
            items:
              $ref: '#/definitions/Brands'
        '404':
          description: '404: brand not found error'
          schema:
            $ref: '#/definitions/Error'
            
            
  /products:
    get:
      tags:
        - 'Products'
      summary: 'Product Types of Sunglasses'
      description: |
        The Products endpoint returns information about the product types of sunglasses offered by Sunglasses-io. The response includes the product id, name, description, price, imageUrls, and a categoryId that links the products to their associated brands.
      parameters:
        - name: 'product'
          in: 'query'
          description: 'A product name.'
          required: true
          type: 'string'
      responses:
        200:
          description: 'An object containing product details.'
          schema:
            type: 'object'
            items:
              $ref: '#/definitions/Products'
        '404':
          description: '404: product not found error'
          schema:
            $ref: '#/definitions/Error'
            
            
  /login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: "|
      The login endpoint supports user login."
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  
  
  /goals:
    get:
      summary: Goals
      description: |
        The Goals endpoint allows you to search goals based on different filters such as category and popularity as well as a search string
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
        - name: sort
          in: query
          description: The sort type on the response.  
          required: false
          type: array
          items:
            type: string
            enum:
              - upVotes
              - dateCreated
      tags:
        - Goals
      responses:
        '200':
          description: An array of goals
          schema:
            type: array
            items:
              $ref: '#/definitions/Goal'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: >-
        The User Profile endpoint returns information about the Uber user that
        has authorized with the application.
      tags:
        - User
      responses:
        '200':
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/goals/{id}/accept:
    post:
      summary: Accept a Goal
      description: |
        This endpoint allows you accept a given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to accept
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Acceptance is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/goals/{id}/achieve:
    post:
      summary: Achieve a Goal
      description: |
        This endpoint allows you achieve a given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to achieve
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Achievement is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/goals/{id}/challenge/{userId}:
    post:
      summary: Challenge a Goal
      description: |
        This endpoint allows you challenge a user for given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to achieve
          required: true
          type: string
        - name: userId
          in: path
          description: The id user to challenge
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Challenge is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/goals/{id}/gift/{userId}:
    post:
      summary: Gift a Goal
      description: |
        This endpoint allows you gift a given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to gift
          required: true
          type: string
        - name: userId
          in: path
          description: The id user to gift the goal to
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Achievement is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /categories:
    get:
      summary: Categories
      description: >
        Categories define groupings of goals for browsing.
      parameters:
        - name: limit
          in: query
          description: The number of results to limit the search to
          required: false
          type: number
          format: int32
      tags:
        - Categories
      responses:
        '200':
          description: An array of categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /categories/{id}/goals:
    get:
      summary: Goals in Category
      description: >
        All the goals in a given category
      parameters:
        - name: id
          in: path
          description: The id of the category to search for goals in.
          required: true
          type: string
      tags:
        - Categories
      responses:
        '200':
          description: An array of goals in the category
          schema:
            type: array
            items:
              $ref: '#/definitions/Goal'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Brands:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
        
  Products:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.



  Goal:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a goal.
      categoryId:
        type: string
        description: The id of the category this goal belongs to.
      description:
        type: string
        description: Description of product.
      upVotes:
        type: integer
        format: int32
        description: The number of up votes given to a goal
      downVotes:
        type: integer
        format: int32
        description: The number of down votes given to a goal
      imageURL:
        type: string
        description: The URL for the image representing the goal
      dateCreated:
        type: string
        format: date-time
        description: The date the goal was created
  Category:
    type: object
    properties:
      id:
        type: string
        description: >-
          The unique identifier given to the category
      name:
        type: string
        description: The name of the category
  User:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      acceptedGoals:
        items:
          $ref: '#/definitions/Goal'
      achievedGoals:
        items:
          $ref: '#/definitions/Goal'
      giftedGoals:
        items:
          $ref: '#/definitions/Goal'    
      challengedGoals:
        items:
          $ref: '#/definitions/Goal'        
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string